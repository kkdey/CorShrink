system.time(glasso_sample_05 <- glasso::glasso(cov_sample, rho = 0.5))
system.time(glasso_sample_1 <- glasso::glasso(cov_sample, rho = 1))
system.time(glasso_sample_10 <- glasso::glasso(cov_sample, rho = 10))
eigen_sample_ML <- eigen(cov_sample_ML, only.values = TRUE)
eigen_sample_ML_boot <- eigen(cov_sample_ML_boot, only.values = TRUE)
eigen_sample_VEM <- eigen(cov_sample_VEM, only.values = TRUE)
eigen_strimmer <- eigen(strimmer_sample, only.values = TRUE)
eigen_glasso_005 <- eigen(glasso_sample_005$w, only.values = TRUE)
eigen_glasso_05 <- eigen(glasso_sample_05$w, only.values = TRUE)
eigen_glasso_1 <- eigen(glasso_sample_1$w, only.values = TRUE)
eigen_glasso_10 <- eigen(glasso_sample_10$w, only.values = TRUE)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
pop_eigen <- eigen(pop_cov$Sigma, only.values = TRUE)
library(ggplot2)
eigendata <- data.frame(
eigen_order = 1:dim,
covshrink.ML = sort(log(as.numeric(eigen_sample_ML$values)+1),  decreasing=TRUE),
covshrink.ML.boot = sort(log(as.numeric(eigen_sample_ML_boot$values)+1),  decreasing=TRUE),
covshrink.VEM = sort(log(as.numeric(eigen_sample_VEM$values)+1),  decreasing=TRUE),
covshrink.strimmer = sort(log(as.numeric(eigen_strimmer$values)+1),  decreasing=TRUE),
glasso.cov.005 = sort(log(as.numeric(eigen_glasso_005$values)+1),  decreasing=TRUE),
glasso.cov.05 = sort(log(as.numeric(eigen_glasso_05$values)+1),  decreasing=TRUE),
glasso.cov.1 = sort(log(as.numeric(eigen_glasso_1$values)+1),  decreasing=TRUE),
glasso.cov.10 = sort(log(as.numeric(eigen_glasso_10$values)+1),  decreasing=TRUE),
sample_cov = sort(log(as.numeric(eigen_sample$values)+1),
decreasing=TRUE),
pop_cov = sort(log(as.numeric(pop_eigen$values)+1), decreasing=TRUE))
colnames(eigendata) <- c("eigenorder",
"covshrinkML",
"covshrinkML.boot",
"covshrinkVEM",
"cov.strimmer",
"cov.glasso.005",
"cov.glasso.05",
"cov.glasso.1",
"cov.glasso.10",
"sample.cov",
"pop.cov")
library(ggplot2)
ggplot(eigendata, aes(eigenorder)) +
geom_line(aes(y = jitter(covshrinkML, factor = 2), colour = "covshrinkML")) +
geom_line(aes(y = covshrinkML.boot, colour = "covshrinkML.boot")) +
geom_line(aes(y = covshrinkVEM, colour = "covshrinkVEM")) +
#geom_line(aes(y = covshrinkVEM2, colour = "covshrinkVEM2"))+
geom_line(aes(y = cov.strimmer, colour = "cov.strimmer"))+
geom_line(aes(y = cov.glasso.005, colour = "cov.glasso.rho.0.05"))+
geom_line(aes(y = cov.glasso.05, colour = "cov.glasso.rho.0.5"))+
geom_line(aes(y = cov.glasso.1, colour = "cov.glasso.rho.1"))+
geom_line(aes(y = cov.glasso.10, colour = "cov.glasso.rho.10"))+
geom_line(aes(y = sample.cov, colour = "sample.cov"))+
geom_line(aes(y = pop.cov, colour = "pop.cov"))+
xlab("Order of eigenvalues (sorted)")+
ylab("log(Eigenvalues + 1)")+
scale_colour_manual(values=c("blue", "orange", "magenta", "brown", "violet", "purple", "red", "green", "black", "grey"))+
ggtitle(paste0("n/p=", round(nsamples/dim, 4),""))+
theme(plot.title = element_text(lineheight=.8, face="bold"))
deng_tf_data <- get(load("../ShrinkCovpaper/deng_counts_tf.rda"))
setwd("~/Documents/CorShrink-paper/scripts")
deng_tf_data <- get(load("../rda/deng_counts_tf.rda"))
dim(deng_tf_data)
non_zero_indices <- apply(deng_tf_data, 1, function(x) length(which(x!=0)))
deng_tf_data <- deng_tf_data[which(non_zero_indices > 30), ]
dim(deng_tf_data)
voom_deng_tf <- limma::voom(deng_tf_data)$E
dim(voom_deng_tf)
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), 250,
sd_boot = FALSE, type="ML"));
save(covshrink_ML, file="../rda/covshrink_deng_tf-noboot.rda")
system.time(covshrink_ML_boot <- CorShrink::CovShrink((voom_deng_tf), 250,
sd_boot = TRUE, type="ML"));
save(covshrink_ML_boot, file="../rda/covshrink_deng_tf-boot.rda")
library(fields)
set.seed(1)
par(mfrow=c(1,3))
par(mar=c(1,1,1,1))
num <- 100
cols = colorRampPalette(c("white", "blue", "red"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML_boot)), col=cols, nlevel=num, main="CorShrink.ML.boot", cex.main=1)
cov_sample <- cov(voom_deng_tf)
dim(cov_sample)
num <- 100
cols = colorRampPalette(c("white", "blue", "red"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML_boot)), col=cols, nlevel=num, main="CorShrink.ML.boot", cex.main=1)
rownames(voom_deng_tf)
colnames(voom_deng_tf)
colnames(deng_tf_data)
library(fields)
set.seed(1)
par(mfrow=c(1,3))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML_boot)), col=cols, nlevel=num, main="CorShrink.ML.boot", cex.main=1)
covshrink_ML[1:5,1:5]
cov2cor(as.matrix(covshrink_ML))[1:5,1:5]
cov2cor(as.matrix(cov_sample))[1:5,1:5]
cov2cor(as.matrix(covshrink_ML_boot))[1:5,1:5]
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), 100,
sd_boot = FALSE, type="ML"));
save(covshrink_ML, file="../rda/covshrink_deng_tf-noboot.rda")
system.time(covshrink_ML_boot <- CorShrink::CovShrink((voom_deng_tf), 100,
sd_boot = TRUE, type="ML"));
save(covshrink_ML_boot, file="../rda/covshrink_deng_tf-boot.rda")
library(fields)
set.seed(1)
par(mfrow=c(1,3))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML_boot)), col=cols, nlevel=num, main="CorShrink.ML.boot", cex.main=1)
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), 10,
sd_boot = FALSE, type="ML"));
save(covshrink_ML, file="../rda/covshrink_deng_tf-noboot.rda")
system.time(covshrink_ML_boot <- CorShrink::CovShrink((voom_deng_tf), 10,
sd_boot = TRUE, type="ML"));
save(covshrink_ML_boot, file="../rda/covshrink_deng_tf-boot.rda")
library(fields)
set.seed(1)
par(mfrow=c(1,3))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML_boot)), col=cols, nlevel=num, main="CorShrink.ML.boot", cex.main=1)
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), 6,
sd_boot = FALSE, type="ML"));
save(covshrink_ML, file="../rda/covshrink_deng_tf-noboot.rda")
system.time(covshrink_ML_boot <- CorShrink::CovShrink((voom_deng_tf), 6,
sd_boot = TRUE, type="ML"));
save(covshrink_ML_boot, file="../rda/covshrink_deng_tf-boot.rda")
library(fields)
set.seed(1)
par(mfrow=c(1,3))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML_boot)), col=cols, nlevel=num, main="CorShrink.ML.boot", cex.main=1)
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), 20,
sd_boot = FALSE, type="ML"));
save(covshrink_ML, file="../rda/covshrink_deng_tf-noboot.rda")
system.time(covshrink_ML_boot <- CorShrink::CovShrink((voom_deng_tf), 20,
sd_boot = TRUE, type="ML"));
save(covshrink_ML_boot, file="../rda/covshrink_deng_tf-boot.rda")
library(fields)
set.seed(1)
par(mfrow=c(1,2))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("red", "white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), 50,
sd_boot = FALSE, type="ML"));
save(covshrink_ML, file="../rda/covshrink_deng_tf-noboot.rda")
library(fields)
set.seed(1)
par(mfrow=c(1,2))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("red", "white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
system.time(covshrink_ML_boot <- CorShrink::CovShrink((voom_deng_tf), 50,
sd_boot = TRUE, type="ML"));
save(covshrink_ML_boot, file="../rda/covshrink_deng_tf-boot.rda")
library(fields)
set.seed(1)
par(mfrow=c(1,3))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("red", "white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML_boot)), col=cols, nlevel=num, main="CorShrink.ML.boot", cex.main=1)
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("red", "white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML_boot)), col=cols, nlevel=num, main="CorShrink.ML.boot", cex.main=1)
library(CorShrink)
dim <- 100
nsamples <- 50
pop_cov <- generate_cov(dim);
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML"))
system.time(cov_sample_ML_boot <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = TRUE, type="ML"))
system.time(cov_sample_VEM <-  CorShrink::CovShrink(generate_sample, nsamples, type="VEM"))
system.time(strimmer_sample <- corpcor::cov.shrink(generate_sample))
system.time(glasso_sample_005 <- glasso::glasso(cov_sample, rho = 0.05))
system.time(glasso_sample_05 <- glasso::glasso(cov_sample, rho = 0.5))
system.time(glasso_sample_1 <- glasso::glasso(cov_sample, rho = 1))
system.time(glasso_sample_10 <- glasso::glasso(cov_sample, rho = 10))
generate_sample <- mvtnorm::rmvnorm(nsamples, rep(0, dim), pop_cov$Sigma);
cov_sample <- cov(generate_sample)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
nsamples <- nsamples
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML"))
system.time(cov_sample_ML_boot <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = TRUE, type="ML"))
dim <- 100
nsamples <- 50
pop_cov <- generate_cov(dim);
generate_sample <- mvtnorm::rmvnorm(nsamples, rep(0, dim), pop_cov$Sigma);
cov_sample <- cov(generate_sample)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
nsamples <- nsamples
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML"))
system.time(cov_sample_VEM <-  CorShrink::CovShrink(generate_sample, nsamples, type="VEM"))
system.time(strimmer_sample <- corpcor::cov.shrink(generate_sample))
system.time(glasso_sample_005 <- glasso::glasso(cov_sample, rho = 0.05))
system.time(glasso_sample_05 <- glasso::glasso(cov_sample, rho = 0.5))
system.time(glasso_sample_1 <- glasso::glasso(cov_sample, rho = 1))
system.time(glasso_sample_10 <- glasso::glasso(cov_sample, rho = 10))
library(pracma)
install.packages("pracma")
library(pracma)
subsapce(pop_cov, cov_sample_ML)
subspce(pop_cov, cov_sample_ML)
subspace(pop_cov, cov_sample_ML)
subspace(pop_cov, as.matrix(cov_sample_ML))
as.matrix(cov_sample_ML)
subspace(pop_cov$Sigma, as.matrix(cov_sample_ML))
subspace(pop_cov$Sigma, as.matrix(cov_sample_VEM))
subspace(pop_cov$Sigma, strimmer_sample)
subspace(pop_cov$Sigma, cov_sample)
subspace(pop_cov$Sigma, glasso_sample_005)
subspace(pop_cov$Sigma, matrix(glasso_sample_005))
subspace(pop_cov$Sigma, matrix(glasso_sample_005$w))
dim(glasso_sample_005$w)
dim(pop_cov)
dim(pop_cov$Sigma)
subspace(pop_cov$Sigma, glasso_sample_005$w)
subspace(pop_cov$Sigma, glasso_sample_05$w)
subspace(pop_cov$Sigma, glasso_sample_1$w)
subspace(pop_cov$Sigma, glasso_sample_10$w)
dim <- 100
nsamples <- 10
pop_cov <- generate_cov(dim);
generate_sample <- mvtnorm::rmvnorm(nsamples, rep(0, dim), pop_cov$Sigma);
cov_sample <- cov(generate_sample)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
nsamples <- nsamples
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML"))
system.time(cov_sample_VEM <-  CorShrink::CovShrink(generate_sample, nsamples, type="VEM"))
system.time(strimmer_sample <- corpcor::cov.shrink(generate_sample))
system.time(glasso_sample_005 <- glasso::glasso(cov_sample, rho = 0.05))
system.time(glasso_sample_05 <- glasso::glasso(cov_sample, rho = 0.5))
system.time(glasso_sample_1 <- glasso::glasso(cov_sample, rho = 1))
system.time(glasso_sample_10 <- glasso::glasso(cov_sample, rho = 10))
library(pracma)
subspace(pop_cov$Sigma, as.matrix(cov_sample_ML))
subspace(pop_cov$Sigma, as.matrix(cov_sample_VEM))
subspace(pop_cov$Sigma, strimmer_sample)
subspace(pop_cov$Sigma, cov_sample)
subspace(pop_cov$Sigma, glasso_sample_005$w)
subspace(pop_cov$Sigma, glasso_sample_05$w)
subspace(pop_cov$Sigma, glasso_sample_1$w)
subspace(pop_cov$Sigma, glasso_sample_10$w)
subsapce
subspace
H <-
hadamard(8)
A <- H[, 2:4]
B <- H[, 5:8]
subspace(A, B)
H
dim <- 100
nsamples <- 5
pop_cov <- generate_cov(dim);
generate_sample <- mvtnorm::rmvnorm(nsamples, rep(0, dim), pop_cov$Sigma);
cov_sample <- cov(generate_sample)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
nsamples <- nsamples
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML"))
system.time(cov_sample_VEM <-  CorShrink::CovShrink(generate_sample, nsamples, type="VEM"))
system.time(strimmer_sample <- corpcor::cov.shrink(generate_sample))
system.time(glasso_sample_005 <- glasso::glasso(cov_sample, rho = 0.05))
system.time(glasso_sample_05 <- glasso::glasso(cov_sample, rho = 0.5))
system.time(glasso_sample_1 <- glasso::glasso(cov_sample, rho = 1))
system.time(glasso_sample_10 <- glasso::glasso(cov_sample, rho = 10))
library(pracma)
subspace(pop_cov$Sigma, as.matrix(cov_sample_ML))
subspace(pop_cov$Sigma, as.matrix(cov_sample_VEM))
subspace(pop_cov$Sigma, strimmer_sample)
subspace(pop_cov$Sigma, cov_sample)
subspace(pop_cov$Sigma, glasso_sample_005$w)
subspace(pop_cov$Sigma, glasso_sample_05$w)
subspace(pop_cov$Sigma, glasso_sample_1$w)
subspace(pop_cov$Sigma, glasso_sample_10$w)
deng_tf_data <- get(load("../rda/deng_counts_tf.rda"))
non_zero_indices <- apply(deng_tf_data, 1, function(x) length(which(x!=0)))
deng_tf_data <- deng_tf_data[which(non_zero_indices > 30), ]
voom_deng_tf <- limma::voom(deng_tf_data)$E
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), nsamples = 200,
sd_boot = FALSE,
partial = TRUE,
type="ML"));
setwd("~/Documents/CorShrink-paper/scripts")
deng_tf_data <- get(load("../rda/deng_counts_tf.rda"))
non_zero_indices <- apply(deng_tf_data, 1, function(x) length(which(x!=0)))
deng_tf_data <- deng_tf_data[which(non_zero_indices > 30), ]
voom_deng_tf <- limma::voom(deng_tf_data)$E
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), nsamples = 200,
sd_boot = FALSE,
partial = TRUE,
type="ML"));
library(fields)
set.seed(1)
par(mfrow=c(1,2))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("red", "white", "blue"))(100)
image.plot(corpcor::cor2pcor(cov2cor(cov_sample)), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
library(fields)
set.seed(1)
par(mfrow=c(1,2))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("red", "white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
deng_tf_data <- get(load("../rda/deng_counts_tf.rda"))
non_zero_indices <- apply(deng_tf_data, 1, function(x) length(which(x!=0)))
deng_tf_data <- deng_tf_data[which(non_zero_indices > 30), ]
voom_deng_tf <- limma::voom(deng_tf_data)$E
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), nsamples = 200,
sd_boot = FALSE,
partial = FALSE,
type="ML"));
library(fields)
set.seed(1)
par(mfrow=c(1,2))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("red", "white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
system.time(covshrink_ML <- CorShrink::CovShrink((voom_deng_tf), nsamples = 50,
sd_boot = FALSE,
partial = FALSE,
type="ML"));
library(fields)
set.seed(1)
par(mfrow=c(1,2))
par(mar=c(1,1,1,1))
cov_sample <- cov(voom_deng_tf)
num <- 100
cols = colorRampPalette(c("red", "white", "blue"))(100)
image.plot(cov2cor(cov_sample), col=cols, nlevel=num, main="sample.corr", cex.main=1)
image.plot(cov2cor(as.matrix(covshrink_ML)), col=cols, nlevel=num, main="CorShrink.ML", cex.main=1)
library(CorShrink)
library(CorShrink)
source('~/Documents/CorShrink/R/CovShrink.R')
dim <- 100
nsamples <- 10
rho1 <- 0.4;
rho2 <- 0.7;
block1 <- diag(rho1, dim/2) + (1-rho1)*rep(1, dim/2)%*% t(rep(1, dim/2))
block2 <- diag(rho2, dim/2) + (1-rho2)*rep(1, dim/2)%*% t(rep(1, dim/2))
pop_cov <- as.matrix(Matrix::bdiag(block1, block2));
generate_sample <- mvtnorm::rmvnorm(nsamples, rep(0, dim), pop_cov$Sigma);
cov_sample <- cov(generate_sample)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
nsamples <- nsamples
dim <- 100
nsamples <- 10
rho1 <- 0.4;
rho2 <- 0.7;
block1 <- diag(rho1, dim/2) + (1-rho1)*rep(1, dim/2)%*% t(rep(1, dim/2))
block2 <- diag(rho2, dim/2) + (1-rho2)*rep(1, dim/2)%*% t(rep(1, dim/2))
pop_cov <- as.matrix(Matrix::bdiag(block1, block2));
generate_sample <- mvtnorm::rmvnorm(nsamples, rep(0, dim), pop_cov);
cov_sample <- cov(generate_sample)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
nsamples <- nsamples
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML",
ash.control = list(mixcompdist = "+uniform")))
system.time(cov_sample_ML_boot <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = TRUE, type="ML",
ash.control = list(mixcompdist = "+uniform")))
system.time(cov_sample_VEM <-  CorShrink::CovShrink(generate_sample, nsamples, type="VEM"))
system.time(strimmer_sample <- corpcor::cov.shrink(generate_sample))
system.time(glasso_sample_005 <- glasso::glasso(cov_sample, rho = 0.05))
system.time(glasso_sample_05 <- glasso::glasso(cov_sample, rho = 0.5))
system.time(glasso_sample_1 <- glasso::glasso(cov_sample, rho = 1))
system.time(glasso_sample_10 <- glasso::glasso(cov_sample, rho = 10))
library(fields)
set.seed(1)
par(mfrow=c(4,2))
par(mar=c(1,1,1,1))
num <- 100
cols = colorRampPalette(c("white", "blue", "red"))(100)
image.plot(cov2cor(pop_cov), col=cols, nlevel=num, main="pop.cov", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample)), breaks = 0:num/num, col=cols, nlevel=num, main="sample.cov", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_ML)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_ML_boot)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.ML.boot", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_VEM)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.VEM", cex.main=1)
#image.plot(cov2cor(as.matrix(cov_sample_VEM2)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.VEM2", cex.main=1)
image.plot(cov2cor(as.matrix(strimmer_sample)),breaks = 0:num/num, col=cols, nlevel=num, main="strimmer.cov", cex.main=1)
image.plot(cov2cor(as.matrix(glasso_sample_005$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=0.05", cex.main=1)
image.plot(cov2cor(as.matrix(glasso_sample_05$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=0.5", cex.main=1)
#image.plot(cov2cor(as.matrix(glasso_sample_1$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=1", cex.main=1)
#image.plot(cov2cor(as.matrix(glasso_sample_10$w)), breaks = 0:num/num,  col=cols, nlevel=num, main="glasso.cov.rho=10", cex.main=1)
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML",
ash.control = list(mixcompdist = "+uniform")))
system.time(cov_sample_ML_boot <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = TRUE, type="ML",
ash.control = list(mixcompdist = "+uniform")))
dim <- 100
nsamples <- 10
rho1 <- 0.3;
rho2 <- 0.8;
block1 <- diag(rho1, dim/2) + (1-rho1)*rep(1, dim/2)%*% t(rep(1, dim/2))
block2 <- diag(rho2, dim/2) + (1-rho2)*rep(1, dim/2)%*% t(rep(1, dim/2))
pop_cov <- as.matrix(Matrix::bdiag(block1, block2));
generate_sample <- mvtnorm::rmvnorm(nsamples, rep(0, dim), pop_cov);
cov_sample <- cov(generate_sample)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
nsamples <- nsamples
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML",
ash.control = list(mixcompdist = "+uniform")))
system.time(cov_sample_ML_boot <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = TRUE, type="ML",
ash.control = list(mixcompdist = "+uniform")))
system.time(cov_sample_VEM <-  CorShrink::CovShrink(generate_sample, nsamples, type="VEM"))
system.time(strimmer_sample <- corpcor::cov.shrink(generate_sample))
system.time(glasso_sample_005 <- glasso::glasso(cov_sample, rho = 0.05))
system.time(glasso_sample_05 <- glasso::glasso(cov_sample, rho = 0.5))
system.time(glasso_sample_1 <- glasso::glasso(cov_sample, rho = 1))
system.time(glasso_sample_10 <- glasso::glasso(cov_sample, rho = 10))
library(fields)
set.seed(1)
par(mfrow=c(4,2))
par(mar=c(1,1,1,1))
num <- 100
cols = colorRampPalette(c("white", "blue", "red"))(100)
image.plot(cov2cor(pop_cov), col=cols, nlevel=num, main="pop.cov", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample)), breaks = 0:num/num, col=cols, nlevel=num, main="sample.cov", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_ML)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_ML_boot)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.ML.boot", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_VEM)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.VEM", cex.main=1)
#image.plot(cov2cor(as.matrix(cov_sample_VEM2)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.VEM2", cex.main=1)
image.plot(cov2cor(as.matrix(strimmer_sample)),breaks = 0:num/num, col=cols, nlevel=num, main="strimmer.cov", cex.main=1)
image.plot(cov2cor(as.matrix(glasso_sample_005$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=0.05", cex.main=1)
image.plot(cov2cor(as.matrix(glasso_sample_05$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=0.5", cex.main=1)
#image.plot(cov2cor(as.matrix(glasso_sample_1$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=1", cex.main=1)
#image.plot(cov2cor(as.matrix(glasso_sample_10$w)), breaks = 0:num/num,  col=cols, nlevel=num, main="glasso.cov.rho=10", cex.main=1)
dim <- 100
nsamples <- 10
rho1 <- 0.3;
rho2 <- 0.8;
block1 <- diag(rho1, dim/2) + (1-rho1)*rep(1, dim/2)%*% t(rep(1, dim/2))
block2 <- diag(rho2, dim/2) + (1-rho2)*rep(1, dim/2)%*% t(rep(1, dim/2))
pop_cov <- as.matrix(Matrix::bdiag(block1, block2));
generate_sample <- mvtnorm::rmvnorm(nsamples, rep(0, dim), pop_cov);
cov_sample <- cov(generate_sample)
eigen_sample <- eigen(cov_sample, only.values = TRUE)
nsamples <- nsamples
system.time(cov_sample_ML <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = FALSE, type="ML",
ash.control = list(mixcompdist = "normal")))
system.time(cov_sample_ML_boot <-  CorShrink::CovShrink(generate_sample, nsamples, sd_boot = TRUE, type="ML",
ash.control = list(mixcompdist = "normal")))
system.time(cov_sample_VEM <-  CorShrink::CovShrink(generate_sample, nsamples, type="VEM"))
system.time(strimmer_sample <- corpcor::cov.shrink(generate_sample))
system.time(glasso_sample_005 <- glasso::glasso(cov_sample, rho = 0.05))
system.time(glasso_sample_05 <- glasso::glasso(cov_sample, rho = 0.5))
system.time(glasso_sample_1 <- glasso::glasso(cov_sample, rho = 1))
system.time(glasso_sample_10 <- glasso::glasso(cov_sample, rho = 10))
library(fields)
set.seed(1)
par(mfrow=c(4,2))
par(mar=c(1,1,1,1))
num <- 100
cols = colorRampPalette(c("white", "blue", "red"))(100)
image.plot(cov2cor(pop_cov), col=cols, nlevel=num, main="pop.cov", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample)), breaks = 0:num/num, col=cols, nlevel=num, main="sample.cov", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_ML)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.ML", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_ML_boot)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.ML.boot", cex.main=1)
image.plot(cov2cor(as.matrix(cov_sample_VEM)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.VEM", cex.main=1)
#image.plot(cov2cor(as.matrix(cov_sample_VEM2)), breaks = 0:num/num, col=cols, nlevel=num, main="corshrink.VEM2", cex.main=1)
image.plot(cov2cor(as.matrix(strimmer_sample)),breaks = 0:num/num, col=cols, nlevel=num, main="strimmer.cov", cex.main=1)
image.plot(cov2cor(as.matrix(glasso_sample_005$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=0.05", cex.main=1)
image.plot(cov2cor(as.matrix(glasso_sample_05$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=0.5", cex.main=1)
#image.plot(cov2cor(as.matrix(glasso_sample_1$w)), breaks = 0:num/num, col=cols, nlevel=num, main="glasso.cov.rho=1", cex.main=1)
#image.plot(cov2cor(as.matrix(glasso_sample_10$w)), breaks = 0:num/num,  col=cols, nlevel=num, main="glasso.cov.rho=10", cex.main=1)
40.61/3
2*40.61/3
model = train_word2vec("the_nation_traindata.txt",output="the_nation_vectors.bin",threads = 3,vectors = 100,window=12, force=TRUE)
setwd("~/Documents/BLM_project/R")
model = train_word2vec("the_nation_traindata.txt",output="the_nation_vectors.bin",threads = 3,vectors = 100,window=12, force=TRUE)
library(wordVectors)
model = train_word2vec("the_nation_traindata.txt",output="the_nation_vectors.bin",threads = 3,vectors = 100,window=12, force=TRUE)
